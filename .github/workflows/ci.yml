name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [20, 22]
        framework: [react-vite] # add react-webpack or angular later if you want
    env:
      APP_NAME: ci-app
      UI: mui
      STORE: none
      UNIT_TEST: vitest
      E2E_TEST: none

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install scaffold deps
        run: npm ci

      - name: Make CLI executable (non-Windows)
        if: runner.os != 'Windows'
        run: chmod +x bin/index.js

      - name: Scaffold app
        run: |
          node ./bin/index.js "$APP_NAME" \
            --framework "${{ matrix.framework }}" \
            --ts \
            --ui "$UI" \
            --store "$STORE" \
            --test-unit "$UNIT_TEST" \
            --test-e2e "$E2E_TEST" \
            --on-exists overwrite
        shell: bash

      - name: Resolve APP_DIR
        run: |
          if [ "${{ matrix.framework }}" = "react-vite" ]; then
            echo "APP_DIR=Frontends/React/Vite/$APP_NAME" >> $GITHUB_ENV
          elif [ "${{ matrix.framework }}" = "react-webpack" ]; then
            echo "APP_DIR=Frontends/React/Webpack/$APP_NAME" >> $GITHUB_ENV
          else
            echo "APP_DIR=Frontends/Angular/$APP_NAME" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Verify generated path exists
        run: |
          echo "APP_DIR=${APP_DIR}"
          echo "::group::Top-level tree"; ls -la; echo "::endgroup::"
          echo "::group::Frontends (3 levels)"; find Frontends -maxdepth 3 -type d | sort || true; echo "::endgroup::"
          test -d "${APP_DIR}" || (echo "‚ùå ${APP_DIR} not found"; exit 1)
        shell: bash

      - name: Install deps in generated app
        run: npm ci
        working-directory: ${{ env.APP_DIR }}

      - name: Lint (if configured)
        run: npm run -s lint || echo "no lint script"
        working-directory: ${{ env.APP_DIR }}

      - name: Unit tests (if configured)
        run: npm test --silent || echo "no tests or none selected"
        working-directory: ${{ env.APP_DIR }}

      - name: Build
        run: npm run -s build
        working-directory: ${{ env.APP_DIR }}

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
